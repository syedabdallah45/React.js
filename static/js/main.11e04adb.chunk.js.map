{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","toggleMode2","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","toLowerCase","showAlert","charAt","slice","split","length","ProTypes","PropTypes","string","defaultProps","Alert","alert","role","word","lower","Capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11e04adb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { a } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid \">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li>\r\n             \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable darkMode</label>\r\n</div>\r\n<div className={`form-check mx-3 form-switch text-${props.mode==='light'?'green':'light'}`} >\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode2} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable greenMode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.ProTypes ={\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title: 'set title here',\r\n    aboutText: 'About text here'\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const handleUpClick = () => {\r\n        console.log('uppercase was clicked');\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        console.log('lowercase was clicked');\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has been converted to lowercase\", \"success\")\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        console.log('clear');\r\n        let newText ='';\r\n       \r\n        setText(newText);\r\n       props.showAlert(\"Text has been cleared\", \"success\")\r\n    }\r\n\r\n    const handleCapitalClick = () => {\r\n        console.log('clear');\r\n    let newText= Text.charAt(0).toUpperCase() + Text.slice(1);\r\n    setText(newText)\r\n       props.showAlert(\"capitalize first letter\", \"success\")\r\n    }\r\n      \r\n\r\n        \r\n    \r\n    const handleOnChange = (event) => {\r\n        console.log('handle on change ')\r\n        setText(event.target.value)\r\n    }\r\n    const [Text, setText] = useState('black')\r\n    // setText('enter the value');\r\n    \r\n    return (\r\n        <>\r\n\r\n\r\n            <div className=\" container mb-3 my-3\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n               \r\n                <textarea className=\"form-control\" value={Text} onChange={handleOnChange} id=\"area\" rows=\"8\" style={{backgroundColor: props.mode==='dark'?'black':'white', color:props.mode==='dark'?'white':'black'}}></textarea>\r\n                <button className='btn btn-primary' onClick={handleUpClick}>convert to uppercase</button>\r\n                <button className='btn btn-primary mx-3 my-3' onClick={handleLoClick}>convert to lowercase</button>\r\n            \r\n                <button className='btn btn-primary mx-3 my-3' onClick={handleCapitalClick}>Capital</button>\r\n                <button className='btn btn-primary mx-3 my-3' onClick={handleClearClick}>Clear</button>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>your text summary</h1>\r\n                <p>{Text.split(\" \").length} words and {Text.length} characters</p>\r\n                <p>{0.008 * Text.split(\" \").length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{Text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n    const Capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\">\r\n  <strong>{Capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n \r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert  from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n const [mode, setMode] = useState('light')\nconst [alert, setAlert] = useState(null);\n\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type,\n\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 3000);\n}\n\n\n const toggleMode=()=>{\n   if(mode === 'light'){\n     setMode('dark')\n     document.body.style.backgroundColor='black'\n     showAlert(\"Dark mode has been enabled\", \"success\")\n   }\n   else{\n     setMode('light')\n     document.body.style.backgroundColor='white'\n     showAlert(\"Light mode has been enabled\", \"success\")\n   }\n }\n const toggleMode2=()=>{\n  if(mode === 'light'){\n    setMode('success')\n    document.body.style.backgroundColor='green'\n    showAlert(\"Green mode has been enabled\", \"success\")\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light mode has been enabled\", \"success\")\n  }\n}\n  return (\n   <>\n   {/* <Router> */}\n    <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}  toggleMode2={toggleMode2}\n    aboutText=\"About Textutils\"/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route exact path=\"/\"> */}\n          <TextForm heading='Enter the Text here' showAlert={showAlert} mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n    {/* <Navbar/> */}\n    \n   \n    </div>\n    {/* </Router> */}\n\n    </>\n         );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}